// =================================
// Copyright (c) 2018 Seppo Laakko
// Distributed under the MIT license
// =================================

[hpp]#include <gendoc/cppast/SourceCodeWriter.hpp>
[cpp]#include <gendoc/cppparser/Keyword.hpp>

namespace gendoc.cppparser
{
    [hpp]using namespace gendoc::cppast;

    grammar CppToken
    {
        using Keyword.Keyword;
        using stdlib.identifier;
        using stdlib.string;
        using stdlib.char;

        SourceLine(SourceCodeWriter* writer)
            ::= SourceToken(writer)*
            ;
            
        SourceToken(SourceCodeWriter* writer)
            ::= LineComment{ writer->WriteComment(std::u32string(matchBegin, matchEnd)); }
            |   BlockComment{ writer->WriteComment(std::u32string(matchBegin, matchEnd)); }
            |   PPLine{ writer->WritePP(std::u32string(matchBegin, matchEnd)); }
            |   Keyword{ writer->WriteKeyword(std::u32string(matchBegin, matchEnd)); }
            |   (identifier - Keyword){ writer->WriteIdentifier(std::u32string(matchBegin, matchEnd)); }
            |   string{ writer->WriteString(std::u32string(matchBegin, matchEnd)); }
            |   char{ writer->WriteString(std::u32string(matchBegin, matchEnd)); }
            |   (Space+){ writer->WriteSpace(matchEnd - matchBegin); }
            |   anychar{ writer->WriteOther(std::u32string(matchBegin, matchEnd)); }
            ;

        LineComment
            ::= "//" [^\r\n]*
            ;

        BlockComment
            ::= "/*" (anychar - "*/")* "*/"?
            ;

        PPLine
            ::= Space* '#' [^\r\n]*
            ;

        Space
            ::= [\t ]
            ;
    }
}